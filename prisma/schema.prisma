// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  password    String
  firstName   String
  lastName    String
  role        String?  @default("USER")
  address     String?
  phoneNumber String?
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime       @default(now())
  status        String
  user          User           @relation(fields: [userId], references: [id])
  userId        String         @db.ObjectId
  orderProducts OrderProduct[]
}

model OrderProduct {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String  @db.ObjectId
  productId String  @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  brand        String
  description  String
  price        Float
  category     Category       @relation(fields: [categoryId], references: [id])
  categoryId   String         @db.ObjectId
  variations   Variation[]
  OrderProduct OrderProduct[]
  features     Feature[]
}

model Feature {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  value      String
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])
  productId  String?  @db.ObjectId
  Product    Product? @relation(fields: [productId], references: [id])
}

model Category {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  products  Product[]
  Variation Variation[]
  Feature   Feature[]
  Coupon    Coupon[]
}

model Variation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  type       String
  productId  String   @db.ObjectId
  product    Product  @relation(fields: [productId], references: [id])
  options    Option[]
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])
}

model Option {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  value       String
  price       Float?
  slug        String     @unique
  variationId String     @db.ObjectId
  variation   Variation  @relation(fields: [variationId], references: [id])
  discounts   Discount[]
  images      Image[]
}

model Image {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  urls     String[]
  optionId String   @db.ObjectId
  option   Option   @relation(fields: [optionId], references: [id])
}

model Discount {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  optionId  String   @db.ObjectId
  rate      Float
  startDate DateTime
  endDate   DateTime
  option    Option   @relation(fields: [optionId], references: [id])
}

model Coupon {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  code       String    @unique
  rate       Float
  startDate  DateTime
  endDate    DateTime
  categoryId String?   @db.ObjectId
  category   Category? @relation(fields: [categoryId], references: [id])
}
